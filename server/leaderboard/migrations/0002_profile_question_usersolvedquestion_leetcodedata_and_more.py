# Generated by Django 5.0.6 on 2024-06-10 09:40

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('leaderboard', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('real_name', models.CharField(blank=True, max_length=50)),
                ('username', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('platform', models.CharField(choices=[('LeetCode', 'leetCode'), ('Codechef', 'codechef'), ('Codeforces', 'codeforces')], max_length=50)),
                ('external_id', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserSolvedQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_solved', models.DateTimeField(default=django.utils.timezone.now)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leaderboard.profile')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leaderboard.question')),
            ],
        ),
        migrations.CreateModel(
            name='LeetCodeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('last_solved_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('num_questions_solved', models.IntegerField()),
                ('leetcode_username', models.CharField(max_length=255, unique=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leaderboard.profile')),
                ('solved_questions', models.ManyToManyField(to='leaderboard.usersolvedquestion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CodeforcesData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('last_solved_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('num_questions_solved', models.IntegerField()),
                ('codeforces_username', models.CharField(max_length=255, unique=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leaderboard.profile')),
                ('solved_questions', models.ManyToManyField(to='leaderboard.usersolvedquestion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CodeChefData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('last_solved_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('num_questions_solved', models.IntegerField()),
                ('codechef_username', models.CharField(max_length=255, unique=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leaderboard.profile')),
                ('solved_questions', models.ManyToManyField(to='leaderboard.usersolvedquestion')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
